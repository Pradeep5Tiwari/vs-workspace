                                            ### Builder Design Pattern ###

Question: What is builder design pattern?
Answer: Builder pattern aims to “Separate the construction of a complex object from its representation so that the same 
construction process can create different representations.” It is used to construct a complex object step by step and the
final step will return the object. The process of constructing an object should be generic so that it can be used to 
create different representations of the same object.

UML diagram of builder design pattern is attached here: uml-of-buileder-design-pattern.jpg 

Below are the classes / interfaces which plays a major roles.

1. Product – The product class defines the type of the complex object that is to be generated by the builder pattern.

2. Builder – This abstract base class defines all of the steps that must be taken in order to correctly create a product. 
Each step is generally abstract as the actual functionality of the builder is carried out in the concrete subclasses. 
The GetProduct method is used to return the final product. The builder class is often replaced with a simple interface.

3. ConcreteBuilder – There may be any number of concrete builder classes inheriting from Builder. These classes contain the 
functionality to create a particular complex product.

4. Director – The director-class controls the algorithm that generates the final product object. A director object is instantiated and its Construct method is called. The method includes a parameter to capture the specific concrete builder object that is to be used to generate the product. The director then calls methods of the concrete builder in the correct order to generate the product object. On completion of the process, the GetProduct method of the builder object can be used to return the product.

Example: Let’s see an Example of Builder Design Pattern:-
Consider the construction of a home. Home is the final end product (object) that is to be returned as the output of the 
construction process. It will have many steps like basement construction, wall construction, and so on roof construction. 
Finally, the whole home object is returned. Here using the same process you can build houses with different properties.

#Advantages of Builder Design Pattern
The parameters to the constructor are reduced and are provided in highly readable method calls.
Builder design pattern also helps in minimizing the number of parameters in the constructor and thus there is no need to pass in null for optional parameters to the constructor.
Object is always instantiated in a complete state
Immutable objects can be built without much complex logic in the object building process.
 
#Disadvantages of Builder Design Pattern 
The number of lines of code increases at least to double in builder pattern, but the effort pays off in terms of design flexibility and much more readable code.
Requires creating a separate ConcreteBuilder for each different type of Product.



