Question: What is liskov substitution principle?
Answer: Liskov substitution principle states that "the software should not alter the desirable result when we replace a
parent type with any of its subtypes." OR "Derived types must be completely substitutable for their base types."

LSP means that the classes what we developer create by extending our class, should be able to fit in application without failure.
This is important when we resort to polymorphic behavior through inheritance.
take previous example where printMe() method from child class (TrainingEmployeeExtend) reference print all required details.

This requires the object of the child class to behave in the same way as the objects of the parent class.
This mostely seen in the places where we do runtime type identification and then cast it to appropriate reference type.


Question: Why Liskov Substitution principle is important?
Answer: i) LSP avoids misusing inheritance. 
ii) It confirms us that there is a "IS-A Relationship". 
iii) We can also say that subclass must fulfil the contract defined by the baseclass.





